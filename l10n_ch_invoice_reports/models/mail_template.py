# Copyright 2021 Camptocamp SA
# License AGPL-3.0 or later (http://www.gnu.org/licenses/agpl.html)

import base64

from odoo import _, models


class MailTemplate(models.Model):
    _inherit = "mail.template"

    def generate_email(self, res_ids, fields=None):
        # Method overridden in order remove QR/ISR payslips and use
        # Invoice report with payslip generated by this module

        result = super().generate_email(res_ids, fields)
        if self._should_print_invoice_attachment():
            res_ids_to_templates = self.get_email_template(res_ids)
            for res_id in self.env["account.move"].browse(res_ids):
                related_record = self.env[self.model_id.model].browse(res_id.id)
                template = res_ids_to_templates[res_id.id]
                invoice_attachments = self.generate_invoice_attachment(
                    template, res_id.id, related_record
                )
                result[res_id.id]["attachments"] = invoice_attachments
        return result

    def _should_print_invoice_attachment(self):
        if (
            self.model_id.model == "account.move"
            and self.report_template.report_name
            == "l10n_ch_invoice_reports.account_move_payment_report"
        ):
            return True

    def generate_invoice_attachment(self, template, res_id, related_record):
        self._render_template(template.report_name, template.model, res_id)
        # force translation of attachment's name according to partner's lang
        self = self.with_context(lang=related_record.partner_id.lang)
        report_name = _("invoice_%s_with_payslip.pdf") % related_record.name.replace(
            "/", "_"
        )
        report_xml_id = self.report_template.xml_id
        report_pdf = self.env.ref(report_xml_id).render_qweb_pdf([res_id])[0]
        report_pdf = base64.b64encode(report_pdf)
        return [(report_name, report_pdf)]
